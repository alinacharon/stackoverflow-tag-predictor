name: Deploy API

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  DOCKER_IMAGE: alinacharon/stackoverflow-predictor
  DOCKER_TAG: ${{ github.sha }}
  USE_MODEL_URL: "https://tfhub.dev/google/universal-sentence-encoder/4"

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install Git LFS
        run: |
          sudo apt-get update
          sudo apt-get install git-lfs
          git lfs install
          git lfs version
          git lfs ls-files

      - name: Pull Git LFS files
        run: |
          echo "Pulling Git LFS files..."
          git lfs pull
          echo "Git LFS files pulled. Listing files:"
          git lfs ls-files
          echo "Checking file sizes:"
          ls -lh models/

      - name: Verify model files
        run: |
          echo "Checking model files..."
          ls -la models/
          if [ ! -f "models/model.pkl" ] || [ ! -f "models/mlb.pkl" ]; then
            echo "Error: Model files are missing!"
            exit 1
          fi
          echo "Model files found successfully"

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"
          cache: "pip"

      - name: Cache USE model
        uses: actions/cache@v3
        with:
          path: ~/.cache/tfhub_modules
          key: use-model-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            use-model-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install --upgrade setuptools wheel
          pip install -r requirements.txt
          pip install pytest pytest-cov
          pip install --only-binary :all: numpy==1.21.6
          pip install protobuf==3.20.3
          pip install --only-binary :all: tensorflow==2.12.0 tensorflow-hub==0.12.0 tensorflow-text==2.12.0
          pip install --only-binary :all: scikit-learn==1.0.2
          pip install xgboost==1.3.3
          pip install fastapi==0.104.1 uvicorn==0.24.0
          python -c "import numpy as np; print(f'NumPy version: {np.__version__}')"
          python -c "import tensorflow as tf; print(f'TensorFlow version: {tf.__version__}')"
          python -c "import tensorflow_hub as hub; print(f'TensorFlow Hub version: {hub.__version__}')"
          python -c "import sklearn; print(f'scikit-learn version: {sklearn.__version__}')"
          python -c "import xgboost; print(f'XGBoost version: {xgboost.__version__}')"

      - name: Download NLTK data
        run: |
          python -c "import nltk; \
            nltk.download('punkt'); \
            nltk.download('averaged_perceptron_tagger'); \
            nltk.download('wordnet'); \
            nltk.download('stopwords'); \
            nltk.download('averaged_perceptron_tagger_eng')"

      - name: Pre-download USE model
        run: |
          python -c "import tensorflow_hub as hub; hub.load('${{ env.USE_MODEL_URL }}')"

      - name: Run tests
        run: |
          pytest tests/ -v --cov=api

  build-and-push:
    needs: test
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ env.DOCKER_IMAGE }}:${{ env.DOCKER_TAG }},${{ env.DOCKER_IMAGE }}:latest
          cache-from: |
            type=registry,ref=${{ env.DOCKER_IMAGE }}:buildcache
            type=gha
          cache-to: |
            type=registry,ref=${{ env.DOCKER_IMAGE }}:buildcache,mode=max
            type=gha,mode=max
          build-args: |
            USE_MODEL_URL=${{ env.USE_MODEL_URL }}

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
      - name: Deploy to EC2
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            # Pull the new image
            docker pull ${{ env.DOCKER_IMAGE }}:${{ env.DOCKER_TAG }}

            # Stop and remove the old container
            docker stop stackoverflow-predictor || true
            docker rm stackoverflow-predictor || true

            # Run the new container
            docker run -d \
              --name stackoverflow-predictor \
              --restart unless-stopped \
              -p 3000:3000 \
              -v /app/logs:/app/logs \
              ${{ env.DOCKER_IMAGE }}:${{ env.DOCKER_TAG }}

            # Clean up old images
            docker image prune -f

            # Verify the deployment
            sleep 10
            curl -f http://localhost:3000/health || exit 1
