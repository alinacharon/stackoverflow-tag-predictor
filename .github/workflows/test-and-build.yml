name: Build, Deploy and Test

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  build-deploy-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          python -m nltk.downloader punkt averaged_perceptron_tagger wordnet stopwords

      - name: Create logs directory
        run: mkdir -p logs

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Check for Docker image changes
        id: check_changes
        run: |
          # Get a list of modified files
          CHANGED_FILES=$(git diff --name-only ${{ github.event.before }} ${{ github.sha }})

          # Check if the files affecting the Docker image have changed
          if echo "$CHANGED_FILES" | grep -q -E 'Dockerfile|requirements.txt|api/|models/'; then
            echo "docker_changes=true" >> $GITHUB_OUTPUT
          else
            echo "docker_changes=false" >> $GITHUB_OUTPUT
          fi

      - name: Build and Push Docker image
        if: steps.check_changes.outputs.docker_changes == 'true'
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/stackoverflow-predictor:latest
          cache-from: type=registry,ref=${{ secrets.DOCKER_USERNAME }}/stackoverflow-predictor:buildcache
          cache-to: type=registry,ref=${{ secrets.DOCKER_USERNAME }}/stackoverflow-predictor:buildcache,mode=max

      - name: Configure AWS credentials
        if: github.ref == 'refs/heads/main'
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_DEFAULT_REGION }}

      - name: Deploy to EC2
        if: github.ref == 'refs/heads/main'
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            cd ~/api-sof-project
            git pull origin main
            docker stop $(docker ps -q) || true
            docker rm $(docker ps -aq) || true
            docker build -t tag-predictor .
            docker run -d --env-file .env -p 3000:3000 tag-predictor

      - name: Wait for server to be ready
        if: github.ref == 'refs/heads/main'
        run: |
          echo "Waiting for server to be ready..."
          for i in {1..30}; do
            if curl -s http://${{ secrets.EC2_HOST }}:3000/ > /dev/null; then
              echo "Server is ready!"
              exit 0
            fi
            echo "Attempt $i: Server not ready yet..."
            sleep 10
          done
          echo "Server failed to start in time"
          exit 1

      - name: Run tests against deployed server
        if: github.ref == 'refs/heads/main'
        env:
          AWS_API_URL: http://${{ secrets.EC2_HOST }}:3000
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
          AWS_ENDPOINT_URL: ${{ secrets.AWS_ENDPOINT_URL }}
        run: pytest tests/test_api.py -v

        